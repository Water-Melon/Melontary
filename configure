
#
# Copyright (C) Niklaus F.Schen.
#

#!/bin/sh

root_path=`pwd`
conf_path="$root_path/conf/melontary.xml"

echo "Melontary framework V1.0.4."
echo "Copyright (C) Niklaus F.Schen."

#process parameters
for param in $@
do
	if [ $param == "--help" ]; then
		echo -e "\nMelontary framework."
		echo "Copyright (C) Niklaus F.Schen."
		echo "Options:"
		echo -e "\t--path=ROOT_PATH"
		echo -e "\t--conf_path=CONFIGURATION_FILE_PATH"
		exit 0
	fi

	param_prefix=`echo $param|cut -d '=' -f 1`
	param_suffix=`echo $param|cut -d '=' -f 2`

	if [ $param_prefix == "--path" ]; then
		root_path=$param_suffix
	elif [ $param_prefix == "--conf_path" ]; then
		conf_path=$param_suffix;
	else
		echo "Error: Invalid option \"$param\"."
		exit 1
	fi
done

#create misc file
echo "<?php" > php/melontary.php
echo "/*" >> php/melontary.php
echo " * Copyright (C) Niklaus F.Schen." >> php/melontary.php
echo " */" >> php/melontary.php
echo "class mHook" >> php/melontary.php
echo "{" >> php/melontary.php
echo "    private \$proc;" >> php/melontary.php
echo "    function __construct(callable \$proc)" >> php/melontary.php
echo "    {" >> php/melontary.php
echo "        \$this->proc = \$proc;" >> php/melontary.php
echo "    }" >> php/melontary.php
echo "    public function execute(&\$fillValues)" >> php/melontary.php
echo "    {" >> php/melontary.php
echo "        return call_user_func(\$this->proc, \$fillValues);" >> php/melontary.php
echo "    }" >> php/melontary.php
echo "}" >> php/melontary.php
echo -en "\n" >> php/melontary.php
echo "class melontary" >> php/melontary.php
echo "{" >> php/melontary.php
echo "    private \$root = '$root_path';" >> php/melontary.php
echo "    private \$confPath = '$conf_path';" >> php/melontary.php
echo "    private \$hooks;" >> php/melontary.php
echo "    private \$template;" >> php/melontary.php
echo "    private \$templateSuffix;" >> php/melontary.php
echo -en "\n" >> php/melontary.php
echo "    function __construct()" >> php/melontary.php
echo "    {" >> php/melontary.php
echo "        \$this->hooks = array();" >> php/melontary.php
echo "        \$this->template = 'templates';" >> php/melontary.php
echo "        \$this->templateSuffix = 'html';" >> php/melontary.php
echo "    }" >> php/melontary.php
echo -en "\n" >> php/melontary.php
echo "    private function parse(&\$str)" >> php/melontary.php
echo "    {" >> php/melontary.php
echo "        if ((\$obj = json_decode(\$str, true)) == NULL) {" >> php/melontary.php
echo "            return false;" >> php/melontary.php
echo "        }" >> php/melontary.php
echo "        if (isset(\$obj['var']) === false) {" >> php/melontary.php
echo "            return false;" >> php/melontary.php
echo "        }" >> php/melontary.php
echo "        if (isset(\$this->hooks[\$obj['var']]) === false) {" >> php/melontary.php
echo "            return \"\";" >> php/melontary.php
echo "        }" >> php/melontary.php
echo "        \$hook = \$this->hooks[\$obj['var']];" >> php/melontary.php
echo "        if (isset(\$obj['values']) === false) {" >> php/melontary.php
echo "            \$values = array();" >> php/melontary.php
echo "        } else {" >> php/melontary.php
echo "            \$values = \$obj['values'];" >> php/melontary.php
echo "            if (\$values == NULL) {" >> php/melontary.php
echo "                \$values = array();" >> php/melontary.php
echo "            }" >> php/melontary.php
echo "        }" >> php/melontary.php
echo "        return \$hook->execute(\$values);" >> php/melontary.php
echo "    }" >> php/melontary.php
echo "    private function process(\$str, &\$end, \$exp)" >> php/melontary.php
echo "    {" >> php/melontary.php
echo "        \$prefix_len = strlen('<!--@');" >> php/melontary.php
echo "        \$suffix_len = strlen('@-->');" >> php/melontary.php
echo "        \$prefix = '<!--@';" >> php/melontary.php
echo "        \$suffix = '@-->';" >> php/melontary.php
echo "        \$ret = '';" >> php/melontary.php
echo "        \$count = 0;" >> php/melontary.php
echo -en "\n" >> php/melontary.php
echo "        while (\$str !== false) {" >> php/melontary.php
echo "            \$head = strpos(\$str, \$prefix);" >> php/melontary.php
echo "            \$tail = strpos(\$str, \$suffix);" >> php/melontary.php
echo "            if (\$exp && \$tail === false) return false;" >> php/melontary.php
echo "            if (\$head !== false && \$tail === false) return false;" >> php/melontary.php
echo "            if (\$head === \$tail) return \$ret.\$str;" >> php/melontary.php
echo -en "\n" >> php/melontary.php
echo "            if (\$head === false || \$head > \$tail) {" >> php/melontary.php
echo "                if (\$tail !== 0) {" >> php/melontary.php
echo "                    \$ret .= substr(\$str, 0, \$tail);" >> php/melontary.php
echo "                }" >> php/melontary.php
echo "                \$ret = \$this->parse(\$ret);" >> php/melontary.php
echo "                if (\$ret === false) {" >> php/melontary.php
echo "                    return false;" >> php/melontary.php
echo "                }" >> php/melontary.php
echo "                \$end = \$tail + \$suffix_len + \$count;" >> php/melontary.php
echo "                break;" >> php/melontary.php
echo "            } else {" >> php/melontary.php
echo "                if (\$head !== 0) {" >> php/melontary.php
echo "                    \$ret .= substr(\$str, 0, \$head);" >> php/melontary.php
echo "                    \$str = substr(\$str, \$head+\$prefix_len);" >> php/melontary.php
echo "                    \$count += (\$head+\$prefix_len);" >> php/melontary.php
echo "                }" >> php/melontary.php
echo "                \$thisEnd = 0;" >> php/melontary.php
echo "                \$content = \$this->process(\$str, \$thisEnd, 1);" >> php/melontary.php
echo "                if (\$content === false) {" >> php/melontary.php
echo "                    return false;" >> php/melontary.php
echo "                }" >> php/melontary.php
echo "                \$ret .= \$content;" >> php/melontary.php
echo "                \$str = substr(\$str, \$thisEnd);" >> php/melontary.php
echo "                \$count += \$thisEnd;" >> php/melontary.php
echo "            }" >> php/melontary.php
echo "        }" >> php/melontary.php
echo "        return \$ret;" >> php/melontary.php
echo "    }" >> php/melontary.php
echo -en "\n" >> php/melontary.php
echo -en "\n" >> php/melontary.php
echo "    public function setTemplate(\$path='templates', \$suffix='html')" >> php/melontary.php
echo "    {" >> php/melontary.php
echo "        \$this->template = \$path;" >> php/melontary.php
echo "        \$this->templateSuffix = \$suffix;" >> php/melontary.php
echo "    }" >> php/melontary.php
echo "    public function getRoot()" >> php/melontary.php
echo "    {" >> php/melontary.php
echo "        return \$this->root;" >> php/melontary.php
echo "    }" >> php/melontary.php
echo "    public function getConfPath()" >> php/melontary.php
echo "    {" >> php/melontary.php
echo "        return \$this->confPath;" >> php/melontary.php
echo "    }" >> php/melontary.php
echo "    public function addHook(\$key, callable \$proc)" >> php/melontary.php
echo "    {" >> php/melontary.php
echo "        \$ret = \$this->hooks[\$key];" >> php/melontary.php
echo "        \$hook = new mHook(\$proc);" >> php/melontary.php
echo "        \$this->hooks[\$key] = \$hook;" >> php/melontary.php
echo -en "\n" >> php/melontary.php
echo "        return \$ret;" >> php/melontary.php
echo "    }" >> php/melontary.php
echo "    public function dropHook(\$key)" >> php/melontary.php
echo "    {" >> php/melontary.php
echo "        \$hook = \$this->hooks[\$key];" >> php/melontary.php
echo "        if (\$hook != NULL) {" >> php/melontary.php
echo "            unset(\$hook);" >> php/melontary.php
echo "            \$this->hooks[\$key] = NULL;" >> php/melontary.php
echo "        }" >> php/melontary.php
echo "    }" >> php/melontary.php
echo "    public function fillTemplate(\$name)" >> php/melontary.php
echo "    {" >> php/melontary.php
echo "        if (\$this->template[0] === '/') {" >> php/melontary.php
echo "            \$templateFile = \$this->template.'/'.\$name.'.'.\$this->templateSuffix;" >> php/melontary.php
echo "        } else {" >> php/melontary.php
echo "            \$templateFile = \$this->root.'/'.\$this->template.'/'.\$name.'.'.\$this->templateSuffix;" >> php/melontary.php
echo "        }" >> php/melontary.php
echo "        \$length = filesize(\$templateFile);" >> php/melontary.php
echo "        if (\$file = fopen(\$templateFile, 'r')) {" >> php/melontary.php
echo "            \$template = fread(\$file, \$length);" >> php/melontary.php
echo "            fclose(\$file);" >> php/melontary.php
echo "        }" >> php/melontary.php
echo "        \$end = 0;" >> php/melontary.php
echo "        return \$this->process(\$template, \$end, 0);" >> php/melontary.php
echo "    }" >> php/melontary.php
echo "}" >> php/melontary.php
echo "?>" >> php/melontary.php
